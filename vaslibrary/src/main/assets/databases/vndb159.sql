PRAGMA foreign_keys = 0;

CREATE TABLE sqlitestudio_temp_table AS SELECT *
                                          FROM Customer;

DROP TABLE Customer;

CREATE TABLE Customer (
    UniqueId                   TEXT        NOT NULL
                                           COLLATE NOCASE,
    BackOfficeId               TEXT,
    CustomerName               TEXT,
    CustomerCode               TEXT,
    Address                    TEXT,
    Phone                      TEXT,
    StoreName                  TEXT,
    Mobile                     TEXT,
    Longitude                  REAL,
    Latitude                   REAL,
    NationalCode               TEXT (2048),
    IsActive                   INTEGER,
    CountyId                   TEXT        COLLATE NOCASE,
    CityRef                    INTEGER,
    CityId                     TEXT        COLLATE NOCASE,
    StateId                    TEXT        COLLATE NOCASE,
    StateRef                   INTEGER,
    CustomerLevelId            TEXT        COLLATE NOCASE,
    CustomerActivityId         TEXT        COLLATE NOCASE,
    CustomerCategoryId         TEXT        COLLATE NOCASE,
    CustomerLevelRef           INTEGER,
    CustomerActivityRef        INTEGER,
    CustomerCategoryRef        INTEGER,
    RemainDebit                REAL,
    RemainCredit               REAL,
    CustRemAmountForSaleOffice REAL,
    CustRemAmountAll           REAL,
    CustomerRemain             REAL,
    InitCredit                 REAL,
    InitDebit                  REAL,
    OpenInvoiceCount           INTEGER,
    OpenInvoiceAmount          REAL,
    OpenChequeCount            INTEGER,
    OpenChequeAmount           REAL,
    ReturnChequeCount          INTEGER,
    ReturnChequeAmount         REAL,
    checkCredit                INTEGER,
    checkDebit                 INTEGER,
    rowIndex                   INTEGER,
    Alarm                      TEXT,
    EconomicCode               TEXT (2048),
    IsNewCustomer              INTEGER,
    SalePathRef                INTEGER,
    SalePathNo                 INTEGER,
    SaleAreaRef                INTEGER,
    SaleAreaNo                 INTEGER,
    SaleZoneRef                INTEGER,
    SaleZoneNo                 INTEGER,
    DistPathRef                INTEGER,
    DistPathNo                 INTEGER,
    DistAreaRef                INTEGER,
    DistAreaNo                 INTEGER,
    DistZoneRef                INTEGER,
    DistZoneNo                 INTEGER,
    CityCode                   INTEGER,
    CountyCode                 TEXT (2048),
    CountyRef                  INTEGER,
    CustCtgrCode               TEXT (2048),
    CustActCode                TEXT (2048),
    CustLevelCode              TEXT (2048),
    CityArea                   TEXT,
    OwnerTypeRef               INTEGER,
    OwnerTypeCode              TEXT (2048),
    StateCode                  TEXT (2048),
    CenterId                   TEXT        COLLATE NOCASE,
    ZoneId                     TEXT        COLLATE NOCASE,
    AreaId                     TEXT        COLLATE NOCASE,
    DcCode                     TEXT (2048),
    DCRef                      INTEGER,
    CustomerSubGroup2Id        TEXT        COLLATE NOCASE,
    CustomerSubGroup1Id        TEXT        COLLATE NOCASE,
    CountChq                   INTEGER,
    AmountChq                  REAL,
    ErrorType                  INTEGER,
    ErrorMessage               TEXT,
    CityZone                   TEXT,
    HasCancelOrder             INTEGER,
    DCName                     TEXT,
    RealName                   TEXT (2048),
    SaleOfficeId               TEXT        COLLATE NOCASE,
    SaleOfficeRef              INTEGER,
    Barcode                    TEXT,
    PayableTypes               INTEGER,
    CustChequeRetQty           INTEGER,
    CustGroupRef               INTEGER,
    CustomerPostalCode         TEXT,
    CustomerMessage            TEXT,
    IgnoreLocation             INTEGER,
    ParentCustomerId           INTEGER,
    OPathId                    INTEGER     DEFAULT (0),
    PRIMARY KEY (
        UniqueId ASC
    )
);

INSERT INTO Customer (
                         UniqueId,
                         BackOfficeId,
                         CustomerName,
                         CustomerCode,
                         Address,
                         Phone,
                         StoreName,
                         Mobile,
                         Longitude,
                         Latitude,
                         NationalCode,
                         IsActive,
                         CountyId,
                         CityRef,
                         CityId,
                         StateId,
                         StateRef,
                         CustomerLevelId,
                         CustomerActivityId,
                         CustomerCategoryId,
                         CustomerLevelRef,
                         CustomerActivityRef,
                         CustomerCategoryRef,
                         RemainDebit,
                         RemainCredit,
                         CustRemAmountForSaleOffice,
                         CustRemAmountAll,
                         CustomerRemain,
                         InitCredit,
                         InitDebit,
                         OpenInvoiceCount,
                         OpenInvoiceAmount,
                         OpenChequeCount,
                         OpenChequeAmount,
                         ReturnChequeCount,
                         ReturnChequeAmount,
                         checkCredit,
                         checkDebit,
                         rowIndex,
                         Alarm,
                         EconomicCode,
                         IsNewCustomer,
                         SalePathRef,
                         SalePathNo,
                         SaleAreaRef,
                         SaleAreaNo,
                         SaleZoneRef,
                         SaleZoneNo,
                         DistPathRef,
                         DistPathNo,
                         DistAreaRef,
                         DistAreaNo,
                         DistZoneRef,
                         DistZoneNo,
                         CityCode,
                         CountyCode,
                         CountyRef,
                         CustCtgrCode,
                         CustActCode,
                         CustLevelCode,
                         CityArea,
                         OwnerTypeRef,
                         OwnerTypeCode,
                         StateCode,
                         CenterId,
                         ZoneId,
                         AreaId,
                         DcCode,
                         DCRef,
                         CustomerSubGroup2Id,
                         CustomerSubGroup1Id,
                         CountChq,
                         AmountChq,
                         ErrorType,
                         ErrorMessage,
                         CityZone,
                         HasCancelOrder,
                         DCName,
                         RealName,
                         SaleOfficeId,
                         SaleOfficeRef,
                         Barcode,
                         PayableTypes,
                         CustChequeRetQty,
                         CustGroupRef,
                         CustomerPostalCode,
                         CustomerMessage,
                         IgnoreLocation,
                         ParentCustomerId
                     )
                     SELECT UniqueId,
                            BackOfficeId,
                            CustomerName,
                            CustomerCode,
                            Address,
                            Phone,
                            StoreName,
                            Mobile,
                            Longitude,
                            Latitude,
                            NationalCode,
                            IsActive,
                            CountyId,
                            CityRef,
                            CityId,
                            StateId,
                            StateRef,
                            CustomerLevelId,
                            CustomerActivityId,
                            CustomerCategoryId,
                            CustomerLevelRef,
                            CustomerActivityRef,
                            CustomerCategoryRef,
                            RemainDebit,
                            RemainCredit,
                            CustRemAmountForSaleOffice,
                            CustRemAmountAll,
                            CustomerRemain,
                            InitCredit,
                            InitDebit,
                            OpenInvoiceCount,
                            OpenInvoiceAmount,
                            OpenChequeCount,
                            OpenChequeAmount,
                            ReturnChequeCount,
                            ReturnChequeAmount,
                            checkCredit,
                            checkDebit,
                            rowIndex,
                            Alarm,
                            EconomicCode,
                            IsNewCustomer,
                            SalePathRef,
                            SalePathNo,
                            SaleAreaRef,
                            SaleAreaNo,
                            SaleZoneRef,
                            SaleZoneNo,
                            DistPathRef,
                            DistPathNo,
                            DistAreaRef,
                            DistAreaNo,
                            DistZoneRef,
                            DistZoneNo,
                            CityCode,
                            CountyCode,
                            CountyRef,
                            CustCtgrCode,
                            CustActCode,
                            CustLevelCode,
                            CityArea,
                            OwnerTypeRef,
                            OwnerTypeCode,
                            StateCode,
                            CenterId,
                            ZoneId,
                            AreaId,
                            DcCode,
                            DCRef,
                            CustomerSubGroup2Id,
                            CustomerSubGroup1Id,
                            CountChq,
                            AmountChq,
                            ErrorType,
                            ErrorMessage,
                            CityZone,
                            HasCancelOrder,
                            DCName,
                            RealName,
                            SaleOfficeId,
                            SaleOfficeRef,
                            Barcode,
                            PayableTypes,
                            CustChequeRetQty,
                            CustGroupRef,
                            CustomerPostalCode,
                            CustomerMessage,
                            IgnoreLocation,
                            ParentCustomerId
                       FROM sqlitestudio_temp_table;

DROP TABLE sqlitestudio_temp_table;

DROP VIEW PaymentReportView;

CREATE VIEW PaymentReportView AS
    SELECT Customer.UniqueId AS CustomerId,
           Customer.CustomerCode AS CustomerCode,
           Customer.CustomerName AS CustomerName,
           a.PaymentId AS PaymentId,
           a.InvoiceId AS InvoiceId,
           a.CashAmount AS CashAmount,
           a.ChequeAmount AS ChequeAmount,
           a.CardAmount AS CardAmount,
           a.SettlementDiscountAmount AS SettlementDiscountAmount,
           a.CreditAmount AS CreditAmount,
           Payment.CheckNumber AS ChqNo,
           Payment.ChqDate AS ChqDate,
           Bank.BankName AS BankName,
           Payment.ChqBranchName AS ChqBranchName,
           Payment.ChqBranchCode AS ChqBranchCode,
           Payment.CheckAccountNumber AS ChqAccountNo,
           Payment.ChqAccountName AS ChqAccountName,
           Payment.Ref AS FollowNo,
           City.CityName AS CityName,
           a.PaidAmount AS PaidAmount,
           CustomerCallInvoice.DealerName AS DealerName,
           payment.PaymentType
      FROM (
               SELECT Payment.UniqueId AS PaymentId,
                      Payment.CustomerId,
                      InvoicePaymentInfo.InvoiceId,
                      CASE WHEN Payment.PaymentType = '837689e8-2115-4085-bf7f-0d0da86f3d71' THEN InvoicePaymentInfo.Amount ELSE 0 END AS CashAmount,
                      CASE WHEN Payment.PaymentType = 'e3a93634-ae20-4d57-8e27-eee7b768adfc' THEN InvoicePaymentInfo.Amount ELSE 0 END AS ChequeAmount,
                      CASE WHEN Payment.PaymentType = 'f1b06da6-122d-4427-abd0-84a7cf72b29c' THEN InvoicePaymentInfo.Amount ELSE 0 END AS CardAmount,
                      CASE WHEN Payment.PaymentType = 'df7e99c9-2ed9-436a-b9a3-8ec0f4e86651' THEN InvoicePaymentInfo.Amount ELSE 0 END AS SettlementDiscountAmount,
                      CASE WHEN Payment.PaymentType = '56c7d3ee-4d18-4c5c-bbbd-aacc6bebd862' THEN InvoicePaymentInfo.Amount ELSE 0 END AS CreditAmount,
                      InvoicePaymentInfo.Amount AS PaidAmount
                 FROM Payment
                      INNER JOIN
                      InvoicePaymentInfo ON InvoicePaymentInfo.PaymentId = Payment.UniqueId
               UNION ALL
               SELECT Payment.UniqueId AS PaymentId,
                      Payment.CustomerId,
                      NULL AS InvoiceId,
                      CASE WHEN Payment.PaymentType = '837689e8-2115-4085-bf7f-0d0da86f3d71' THEN (Payment.Amount - IFNULL(sum(InvoicePaymentInfo.Amount), 0) ) ELSE 0 END AS CashAmount,
                      CASE WHEN Payment.PaymentType = 'e3a93634-ae20-4d57-8e27-eee7b768adfc' THEN (Payment.Amount - IFNULL(sum(InvoicePaymentInfo.Amount), 0) ) ELSE 0 END AS ChequeAmount,
                      CASE WHEN Payment.PaymentType = 'f1b06da6-122d-4427-abd0-84a7cf72b29c' THEN (Payment.Amount - IFNULL(sum(InvoicePaymentInfo.Amount), 0) ) ELSE 0 END AS CardAmount,
                      CASE WHEN Payment.PaymentType = 'df7e99c9-2ed9-436a-b9a3-8ec0f4e86651' THEN (Payment.Amount - IFNULL(sum(InvoicePaymentInfo.Amount), 0) ) ELSE 0 END AS SettlementDiscountAmount,
                      CASE WHEN Payment.PaymentType = '56c7d3ee-4d18-4c5c-bbbd-aacc6bebd862' THEN (Payment.Amount - IFNULL(sum(InvoicePaymentInfo.Amount), 0) ) ELSE 0 END AS CreditAmount,
                      (Payment.Amount - IFNULL(sum(InvoicePaymentInfo.Amount), 0) ) AS PaidAmount
                 FROM Payment
                      LEFT JOIN
                      InvoicePaymentInfo ON InvoicePaymentInfo.PaymentId = Payment.UniqueId
                GROUP BY Payment.UniqueId
           )
           AS a
           INNER JOIN
           Customer ON Customer.UniqueId = a.CustomerId
           LEFT JOIN
           Payment ON Payment.UniqueId = a.PaymentId
           LEFT JOIN
           Bank ON Bank.UniqueId = Payment.BankId
           LEFT JOIN
           City ON City.UniqueId = Payment.CityId
           LEFT JOIN
           CustomerCallInvoice ON CustomerCallInvoice.UniqueId = a.InvoiceId
     WHERE PaidAmount > 0;

PRAGMA foreign_keys = 1;
